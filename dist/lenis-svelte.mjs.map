{"version":3,"sources":["../packages/svelte/src/SvelteLenis.svelte","../packages/svelte/src/provider/LenisByContext.svelte","../packages/svelte/src/instances/context.ts","../packages/svelte/src/callbacks/callbacks.svelte.ts","../packages/svelte/src/instances/root.svelte.ts","../packages/svelte/src/provider/LenisByRoot.svelte","../packages/svelte/src/use-lenis.svelte.ts"],"sourcesContent":["import 'svelte/internal/disclose-version';\nimport * as $ from 'svelte/internal/client';\nimport LenisByContext from \"./provider/LenisByContext.svelte\";\nimport LenisByRoot from \"./provider/LenisByRoot.svelte\";\n\nexport default function SvelteLenis($$anchor, $$props) {\n\t$.push($$props, true);\n\n\tlet props = $.rest_props($$props, ['$$slots', '$$events', '$$legacy']);\n\tvar fragment = $.comment();\n\tvar node = $.first_child(fragment);\n\n\t{\n\t\tvar consequent = ($$anchor) => {\n\t\t\tLenisByRoot($$anchor, $.spread_props(() => props));\n\t\t};\n\n\t\tvar alternate = ($$anchor) => {\n\t\t\tLenisByContext($$anchor, $.spread_props(() => props));\n\t\t};\n\n\t\t$.if(node, ($$render) => {\n\t\t\tif ($$props.root) $$render(consequent); else $$render(alternate, false);\n\t\t});\n\t}\n\n\t$.append($$anchor, fragment);\n\t$.pop();\n}","import 'svelte/internal/disclose-version';\nimport * as $ from 'svelte/internal/client';\nimport Lenis from \"lenis\";\nimport { LenisContext } from \"../instances/context\";\n\nvar root = $.template(`<div><div><!></div></div>`);\n\nexport default function LenisByContext($$anchor, $$props) {\n\t$.push($$props, true);\n\n\tlet props = $.rest_props($$props, ['$$slots', '$$events', '$$legacy']);\n\tlet wrapper;\n\tlet content;\n\tlet lenis = $.state(undefined);\n\n\t$.user_effect(() => {\n\t\tconst instance = new Lenis({ ...$$props.options, wrapper, content });\n\n\t\t$.set(lenis, $.proxy(instance));\n\t\treturn () => instance.destroy();\n\t});\n\n\tLenisContext.set(() => $.get(lenis));\n\n\tvar div = root();\n\tlet attributes;\n\tvar div_1 = $.child(div);\n\tvar node = $.child(div_1);\n\n\t$.snippet(node, () => $$props.children);\n\t$.reset(div_1);\n\t$.bind_this(div_1, ($$value) => content = $$value, () => content);\n\t$.reset(div);\n\t$.bind_this(div, ($$value) => wrapper = $$value, () => wrapper);\n\t$.template_effect(() => attributes = $.set_attributes(div, attributes, { class: $$props.class, ...props }));\n\t$.append($$anchor, div);\n\t$.pop();\n}","import type Lenis from \"lenis\";\nimport { getContext, hasContext, setContext } from \"svelte\";\nimport CallbackManager from \"../callbacks/callbacks.svelte\";\nimport { root } from \"./root.svelte\";\n\nconst LENIS_CONTEXT = Symbol('__LENIS_CONTEXT__');\ntype LenisContext = {\n    instance: () => Lenis | undefined;\n    callbackManager: CallbackManager;\n}\n\nconst Root = {\n    instance: () => root.value,\n    callbackManager: new CallbackManager()\n}\n\nexport const LenisContext = {\n    get() {\n        if (hasContext(LENIS_CONTEXT)) {\n            return getContext<LenisContext>(LENIS_CONTEXT);\n        } else {\n            return Root\n        }\n    },\n    set(lenis: LenisContext['instance']) {\n        return setContext(LENIS_CONTEXT, {\n            instance: lenis,\n            callbackManager: new CallbackManager()\n        });\n    }\n}\n\nexport default LenisContext;","import type Lenis from \"lenis\";\n\ntype Callback = {\n    action: (lenis: Lenis) => void;\n    priority: number\n};\n\nexport class CallbackManager {\n\n    callbacks = $state<Callback[]>([])\n\n    constructor() {}\n\n    add(callback: Callback) {\n        this.callbacks.push(callback);\n        this.callbacks.sort((a, b) => a.priority - b.priority);\n    }\n\n    remove(callback: Callback) {\n        this.callbacks = this.callbacks.filter(cb => cb !== callback)\n    }\n\n    forEach(byItem: (callback: Callback) => void) {\n        this.callbacks.forEach(byItem);\n    }\n}\n\nexport default CallbackManager;","import type Lenis from \"lenis\";\n\nexport let root = $state<{ value: Lenis | undefined }>({ value: undefined });\n","import 'svelte/internal/disclose-version';\nimport * as $ from 'svelte/internal/client';\nimport Lenis from \"lenis\";\nimport { LenisContext } from \"../instances/context\";\nimport { root } from \"../instances/root.svelte\";\n\nexport default function LenisByRoot($$anchor, $$props) {\n\t$.push($$props, true);\n\n\tlet props = $.rest_props($$props, ['$$slots', '$$events', '$$legacy']);\n\n\t$.effect_root(() => {\n\t\tconst instance = new Lenis($$props.options);\n\n\t\troot.value = instance;\n\t\tconsole.log(root.value);\n\t\treturn () => instance.destroy();\n\t});\n\n\tLenisContext.set(() => root.value);\n\n\tvar fragment = $.comment();\n\tvar node = $.first_child(fragment);\n\n\t$.snippet(node, () => $$props.children);\n\t$.append($$anchor, fragment);\n\t$.pop();\n}","import type Lenis from \"lenis\";\nimport { untrack } from 'svelte';\nimport { LenisContext } from \"./instances/context\";\n\nexport const useLenis = (onScroll: (lenis: Lenis) => void, priority = 0) => {\n    const context = LenisContext.get();\n\n    $effect(() => {\n        const callback = { action: onScroll, priority };\n        untrack(() => {\n            context.callbackManager.add(callback);\n        })\n\n        return () => {\n            context.callbackManager.remove(callback);\n        }\n    })\n\n    $effect(() => {\n        const lenis = context.instance();\n\n        if (!lenis) return;\n\n        const onScroll = (lenis: Lenis) => {\n            context.callbackManager.forEach(\n                item => item.action(lenis)\n            );\n        }\n        lenis.on('scroll', onScroll)\n\n        return () => lenis.off('scroll', onScroll)\n    })\n\n    return {\n        get current() {\n            return context.instance()\n        }\n    };\n}"],"mappings":"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","names":["$","root","$","Lenis","Lenis","$$anchor","onScroll","lenis"]}